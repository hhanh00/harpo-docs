[{"uri":"https://harpocoin.xyz/blockchain/model/","title":"Data Model","tags":[],"description":"","content":"As its name suggests, the Blockchain is a set of blocks roughly organized as a chain. Ideally, every block would be neatly lined up and form a single linked list.\nBlock A block has the following properties:\n a hash value that serves as its unique identifier. Hash values are considered unique as long as they refer to different content a reference to the previous block as a field prev_hash  These two values are enough for linking the blocks.\nThe rest of the properties are related to the \u0026ldquo;blockchain rules\u0026rdquo;.\nIt is not enough for a block to be structurally correct to be allowed in the blockchain. It must also follow other rules that enforce the correct business behavior.\nProof of Work A block has a proof of work value. It is computed based on the current block difficulty. A block is accepted if its hash is below a hash value derived from the difficulty. The higher the difficulty, the lower the threshold. Miners can affect the block hash by varying the nonce field of the block header.\nBlock Tree As mentioned earlier, we wish blocks would always follow one another. But by the nature of decentralized mining, it is possible, in fact, it is a relatively common occurrence, to see two blocks or more following the same block.\nFor example, a miner in Asia and a miner in Europe may both independently find a suitable nonce and produce different but valid blocks.\nIn this case, we should remember that none of the new blocks is intrinsically better. The network is split between nodes that received and processed the \u0026ldquo;first\u0026rdquo; new block and the nodes that received and processed the \u0026ldquo;other\u0026rdquo;. However, the notion of \u0026ldquo;first\u0026rdquo; and \u0026ldquo;second\u0026rdquo; is relative. Every node would not receive the blocks in the same order due to their geographic and network distance.\nWe say that the network has a \u0026ldquo;split-brain\u0026rdquo; and is not consistent. The blocks possibly can contain different transactions, leading to some of the nodes thinking that certain transactions were made but other nodes don\u0026rsquo;t.\nIt is unfortunate but normal and expected when dealing with decentralized systems.\nTherefore, the blocks do not form a perfect chain but since they can sometimes be sharing the same predecessor, they form a tree. Typically one of the branches is very long (it is the main chain), and there are short-lived branches from time to time.\nIn the next section, we\u0026rsquo;ll describe the \u0026ldquo;Blockchain Game\u0026rdquo; that is a simplified version of the set of blockchain rules.\n"},{"uri":"https://harpocoin.xyz/chainsync/stages/","title":"Stages","tags":[],"description":"","content":"ChainSync: CS\nPurpose of ChainSync CS  Download and process blocks from peers Synchronize the blockchain Update chain state  Stages  CS starts when node boots and stops when the node stops CS is normally is mode CS_FOLLOW CS starts in CS_INIT If the chain is too far behind the current tip, CS switches to CS_SYNC  CS_INIT  Tip is set to last known best, or latest checkpoint or genesis block  CS_SYNC  Indicates that our node is too far behind and should quickly download and sync up Sync relies on a \u0026ldquo;torrent\u0026rdquo; like download mechanism Mode is entered when the median of the height of the peers is farther than 1 block from tip, for 30 seconds Mode is exited when at the end of the sync process, node is no longer in the above situation  CS_FOLLOW  Receives blocks through Gossip protocol and process them  "},{"uri":"https://harpocoin.xyz/chainsync/","title":"ChainSync","tags":[],"description":"","content":"Chapter 1 Chain Sync "},{"uri":"https://harpocoin.xyz/blockchain/game/","title":"Game","tags":[],"description":"","content":"In this game, we receive blocks one by one. Our goal is to determine if the block is valid and if yes, where it should be placed in the \u0026ldquo;blockchain tree\u0026rdquo;. The bonus goal is to keep track of the longest chain, i.e. the main chain.\nBranch and chain are used interchangeably here.\n A branch is the series of blocks going from a leaf (a block that has no follower) to the first block\nBlock Data A block will have:\n hash value. It serves as its ID. prev_hash field. It is used to link to the previous block. pow field. The longest chain is the one that has the highest cumulative POW. That value is calculated by summing the POW of every block that forms the chain. a list of Nullifiers. A Nullifier is also a hash value. It represents the expenditure of some (hidden) amount of coins. To prevent double spending, we enforce the following rule:  On any branch, a nullifier may only appear ONCE\n However, it is possible to have a nullifier appearing more than once in the tree as long as it is on different branches.\nValid Chains If the prev_hash of an incoming block is the hash of a previous block, we want to place it in the tree regardless of whether it has a double-spend. But, a chain that has a double-spend MUST be invalid.\nResults After all the blocks are placed, we want to know which valid branch is the longest.\n"},{"uri":"https://harpocoin.xyz/blockchain/","title":"Blockchain","tags":[],"description":"","content":"Blockchain "},{"uri":"https://harpocoin.xyz/chainsync/sync/","title":"Sync Mode","tags":[],"description":"","content":"State  Peers  PeerId Listen address Hash, Height   Peer Leader: Peer that has the highest height, only peer we request headers from Headers  Headers are requested sequentially from Leader Response headers begin in DETACHED state    Chain Fragment Header State  List of headers received from GetHeaders DETACHED: headers have hash but no height, not validated and not connected to blockchain PARTIAL_LINKED: prev_hash links with hash of previous header. Headers form a list. No POW check, no timestamp check. Chain is not anchored yet. Trim headers that do not link and move them to INVALID state ANCHORED: First header links to a known tip. We can perform more validation  timestamp POW nonce Then trim the headers that fail validation Remaining headers =\u0026gt; Get Block using BlockSync   Send header fragment to block sync downloader  Header  INVALID: Header failed validation and is rejected  Block Sync  Download blocks from multiple peers  Block  Validate if block is right after current best tip  if block validates,  advance tip, update best tip if needed look for next block and repeat   if block does not validate,  mark remaining blocks/headers as INVALID evict Leader end CHAIN_SYNC retry CHAIN_SYNC with next best peer     If no more header fragments, end SYNC  Peer API  GetLastHeight -\u0026gt; height, hash GetHeaders(start_height, start_hash, num_headers) -\u0026gt; [BlockHeader] Return up to num_headers from given (start_height, start_hash) Error if start header is not known GetBlock(hash) -\u0026gt; Block  "},{"uri":"https://harpocoin.xyz/chainsync/block_sync/","title":"Block Sync","tags":[],"description":"","content":"Notes  Follow bittorrent principles a block = a piece we only download from peers we don\u0026rsquo;t choke peers  TODO: Study the BitTorrent protocol\nBlock Validation  Check merkle root Check transaction  zk proofs nullifiers auth signature    "},{"uri":"https://harpocoin.xyz/","title":"Harpo Coin","tags":[],"description":"","content":"Harpo Coin "},{"uri":"https://harpocoin.xyz/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://harpocoin.xyz/tags/","title":"Tags","tags":[],"description":"","content":""}]